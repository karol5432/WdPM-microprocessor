$date
	Sun Nov 05 13:16:12 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_2registers $end
$var wire 1 ! CE_R0 $end
$var wire 1 " CE_R1 $end
$var wire 8 # IN0 [7:0] $end
$var wire 8 $ IN1 [7:0] $end
$var wire 8 % OUT [7:0] $end
$var reg 1 & CLK $end
$var reg 8 ' REG_IN [7:0] $end
$var reg 1 ( REG_SEL $end
$var reg 1 ) REG_WR $end
$scope module mux_reg $end
$var wire 8 * IN0 [7:0] $end
$var wire 8 + IN1 [7:0] $end
$var wire 1 , SEL $end
$var reg 8 - OUT [7:0] $end
$upscope $end
$scope module dec_reg $end
$var wire 1 . EN $end
$var wire 1 , SEL $end
$var reg 2 / OUT [1:0] $end
$upscope $end
$scope module R0 $end
$var wire 1 ! CE $end
$var wire 1 0 CLK $end
$var wire 8 1 IN [7:0] $end
$var reg 8 2 OUT [7:0] $end
$upscope $end
$scope module R1 $end
$var wire 1 " CE $end
$var wire 1 0 CLK $end
$var wire 8 3 IN [7:0] $end
$var reg 8 4 OUT [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
b0 3
bx 2
b0 1
00
b0 /
0.
bx -
0,
bx +
bx *
0)
0(
b0 '
0&
bx %
bx $
bx #
0"
0!
$end
#5
1&
10
#10
0&
00
1(
1,
#15
1&
10
#20
1"
b10 /
0&
00
b11010100 '
b11010100 1
b11010100 3
1)
1.
#25
b11010100 -
b11010100 %
b11010100 4
b11010100 $
b11010100 +
1&
10
#30
0"
b0 /
0&
00
b11010001 '
b11010001 1
b11010001 3
0)
0.
#35
1&
10
#40
1"
b10 /
0&
00
1)
1.
#45
b11010001 -
b11010001 %
b11010001 4
b11010001 $
b11010001 +
1&
10
#50
0"
b0 /
0&
00
0)
0.
#55
1&
10
#60
1!
b1 /
bx -
bx %
0&
00
b10110 '
b10110 1
b10110 3
1)
1.
0(
0,
#65
b10110 -
b10110 %
b10110 2
b10110 #
b10110 *
1&
10
#70
0!
b0 /
0&
00
0)
0.
#75
1&
10
#80
b11010001 -
b11010001 %
0&
00
b0 '
b0 1
b0 3
1(
1,
#85
1&
10
#90
b10110 -
b10110 %
0&
00
0(
0,
#95
1&
10
#100
0&
00
