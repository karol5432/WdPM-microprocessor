$date
	Thu Nov 02 17:18:57 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb_processor $end
$var wire 8 ! ACC_OUT [7:0] $end
$var wire 8 " ALU_OUT [7:0] $end
$var wire 1 # CE_ACC $end
$var wire 1 $ CE_R0 $end
$var wire 8 % MUX_OUT [7:0] $end
$var wire 1 & MUX_SEL $end
$var wire 4 ' OP [3:0] $end
$var wire 8 ( R0_OUT [7:0] $end
$var wire 1 ) RST_CODE $end
$var wire 12 * TO_ID [11:0] $end
$var wire 4 + TO_ROM [3:0] $end
$var reg 1 , CLK $end
$var reg 1 - RESET $end
$scope module p1 $end
$var wire 1 . CLK $end
$var wire 1 / RST $end
$var reg 4 0 DATA [3:0] $end
$upscope $end
$scope module mem $end
$var wire 4 1 ADDR [3:0] $end
$var reg 12 2 DATA [11:0] $end
$upscope $end
$scope module ID $end
$var wire 4 3 INSTRUCTION [3:0] $end
$var reg 1 4 CE_ACC $end
$var reg 1 5 CE_R0 $end
$var reg 4 6 OP [3:0] $end
$var reg 1 7 RESET_INSTR $end
$var reg 1 8 SEL $end
$upscope $end
$scope module ALU $end
$var wire 8 9 IN0 [7:0] $end
$var wire 8 : IN1 [7:0] $end
$var wire 4 ; OP [3:0] $end
$var reg 8 < OUT [7:0] $end
$upscope $end
$scope module ACC $end
$var wire 1 # CE $end
$var wire 1 . CLK $end
$var wire 8 = IN [7:0] $end
$var reg 8 > OUT [7:0] $end
$upscope $end
$scope module R0 $end
$var wire 1 $ CE $end
$var wire 1 . CLK $end
$var wire 8 ? IN [7:0] $end
$var reg 8 @ OUT [7:0] $end
$upscope $end
$scope module mux_alu $end
$var wire 8 A IN0 [7:0] $end
$var wire 8 B IN1 [7:0] $end
$var wire 1 & SEL $end
$var reg 8 C OUT [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
x8
x7
bx 6
x5
x4
bx 3
bx 2
bx 1
bx 0
1/
0.
1-
0,
bx +
bx *
x)
bx (
bx '
x&
bx %
x$
x#
bx "
bx !
$end
#50
b1101010 <
b1101010 "
b1101010 =
b1101010 C
b1101010 %
b1101010 9
07
0)
18
1&
05
0$
14
1#
b1010 6
b1010 '
b1010 ;
b1101010 B
b1101 3
b110101101010 2
b110101101010 *
b0 0
b0 +
b0 1
1,
1.
#100
0/
0,
0.
0-
#150
b1101010 <
b1101010 "
b1101010 =
b1101010 C
b1101010 %
b1101010 9
08
0&
15
1$
04
0#
b0 B
b1011 3
b101100000000 2
b101100000000 *
b1101010 >
b1101010 !
b1101010 ?
b1101010 A
b1 0
b1 +
b1 1
1,
1.
#200
0,
0.
#250
b110100 <
b110100 "
b110100 =
b110100 C
b110100 %
b110100 9
18
1&
05
0$
14
1#
b110100 B
b1101 3
b110100110100 2
b110100110100 *
b10 0
b10 +
b10 1
b1101010 @
b1101010 (
b1101010 :
1,
1.
#300
0,
0.
#350
b1111110 <
b1111110 "
b1111110 =
b110100 C
b110100 %
b110100 9
08
0&
b10 6
b10 '
b10 ;
b0 B
b10 3
b1000000000 2
b1000000000 *
b110100 >
b110100 !
b110100 ?
b110100 A
b11 0
b11 +
b11 1
1,
1.
#400
0,
0.
#450
b11101000 <
b11101000 "
b11101000 =
b101 6
b101 '
b101 ;
b101 3
b10100000000 2
b10100000000 *
b1111110 C
b1111110 %
b1111110 9
b100 0
b100 +
b100 1
b1111110 >
b1111110 !
b1111110 ?
b1111110 A
1,
1.
#500
0,
0.
#550
b11 6
b11 '
b11 ;
b1101000 <
b1101000 "
b1101000 =
b11 3
b11101000 C
b11101000 %
b11101000 9
b1100000000 2
b1100000000 *
b11101000 >
b11101000 !
b11101000 ?
b11101000 A
b101 0
b101 +
b101 1
1,
1.
#600
0,
0.
#650
b10 <
b10 "
b10 =
b1 6
b1 '
b1 ;
b1 3
b100000000 2
b100000000 *
b1101000 C
b1101000 %
b1101000 9
b110 0
b110 +
b110 1
b1101000 >
b1101000 !
b1101000 ?
b1101000 A
1,
1.
#700
0,
0.
#750
04
0#
b1010 6
b1010 '
b1010 ;
b10 <
b10 "
b10 =
b1100 3
b10 C
b10 %
b10 9
b110000000000 2
b110000000000 *
b10 >
b10 !
b10 ?
b10 A
b111 0
b111 +
b111 1
1,
1.
#800
0,
0.
#850
b1000 0
b1000 +
b1000 1
1,
1.
#900
0,
0.
#950
15
1$
b1011 3
b101100000000 2
b101100000000 *
b1001 0
b1001 +
b1001 1
1,
1.
#1000
0,
0.
#1050
b1111 <
b1111 "
b1111 =
b1111 C
b1111 %
b1111 9
18
1&
05
0$
14
1#
b1111 B
b1101 3
b110100001111 2
b110100001111 *
b1010 0
b1010 +
b1010 1
b10 @
b10 (
b10 :
1,
1.
#1100
0,
0.
#1150
b1101 <
b1101 "
b1101 =
b1111 C
b1111 %
b1111 9
08
0&
b100 6
b100 '
b100 ;
b0 B
b100 3
b10000000000 2
b10000000000 *
b1111 >
b1111 !
b1111 ?
b1111 A
b1011 0
b1011 +
b1011 1
1,
1.
#1200
0,
0.
#1250
1/
17
1)
04
0#
b1010 6
b1010 '
b1010 ;
b1101 <
b1101 "
b1101 =
b1111 3
b111100000000 2
b111100000000 *
b1101 C
b1101 %
b1101 9
b1100 0
b1100 +
b1100 1
b1101 >
b1101 !
b1101 ?
b1101 A
1,
1.
#1300
0,
0.
#1350
b1101010 <
b1101010 "
b1101010 =
b1101010 C
b1101010 %
b1101010 9
0/
07
0)
18
1&
14
1#
b1101010 B
b1101 3
b110101101010 2
b110101101010 *
b0 0
b0 +
b0 1
1,
1.
#1400
0,
0.
#1450
b1101010 <
b1101010 "
b1101010 =
b1101010 C
b1101010 %
b1101010 9
08
0&
15
1$
04
0#
b0 B
b1011 3
b101100000000 2
b101100000000 *
b1 0
b1 +
b1 1
b1101010 >
b1101010 !
b1101010 ?
b1101010 A
1,
1.
#1500
0,
0.
#1550
b110100 <
b110100 "
b110100 =
b110100 C
b110100 %
b110100 9
18
1&
05
0$
14
1#
b110100 B
b1101 3
b110100110100 2
b110100110100 *
b1101010 @
b1101010 (
b1101010 :
b10 0
b10 +
b10 1
1,
1.
#1600
0,
0.
#1650
b1111110 <
b1111110 "
b1111110 =
b110100 C
b110100 %
b110100 9
08
0&
b10 6
b10 '
b10 ;
b0 B
b10 3
b1000000000 2
b1000000000 *
b11 0
b11 +
b11 1
b110100 >
b110100 !
b110100 ?
b110100 A
1,
1.
#1700
0,
0.
#1750
b11101000 <
b11101000 "
b11101000 =
b101 6
b101 '
b101 ;
b101 3
b1111110 C
b1111110 %
b1111110 9
b10100000000 2
b10100000000 *
b1111110 >
b1111110 !
b1111110 ?
b1111110 A
b100 0
b100 +
b100 1
1,
1.
#1800
0,
0.
#1850
b11 6
b11 '
b11 ;
b1101000 <
b1101000 "
b1101000 =
b11 3
b1100000000 2
b1100000000 *
b11101000 C
b11101000 %
b11101000 9
b101 0
b101 +
b101 1
b11101000 >
b11101000 !
b11101000 ?
b11101000 A
1,
1.
#1900
0,
0.
#1950
b10 <
b10 "
b10 =
b1 6
b1 '
b1 ;
b1 3
b1101000 C
b1101000 %
b1101000 9
b100000000 2
b100000000 *
b1101000 >
b1101000 !
b1101000 ?
b1101000 A
b110 0
b110 +
b110 1
1,
1.
#2000
0,
0.
#2050
04
0#
b1010 6
b1010 '
b1010 ;
b10 <
b10 "
b10 =
b1100 3
b110000000000 2
b110000000000 *
b10 C
b10 %
b10 9
b111 0
b111 +
b111 1
b10 >
b10 !
b10 ?
b10 A
1,
1.
#2100
0,
0.
